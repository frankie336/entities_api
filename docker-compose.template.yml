# docker-compose.template.yml (Corrected Structure)
# NO 'version:' key at the top

services:
  db:
    image: mysql:8.0
    container_name: my_mysql_cosmic_catalyst
    restart: always
    environment:
      # Use placeholders for values from .env
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "${MYSQL_EXTERNAL_PORT}:3306" # Use placeholder for port if needed
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_custom_network

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant_server
    restart: always
    ports:
      - "${QDRANT_PORT}:6333"  # Use placeholder
      - "6334:6334"          # Assuming this is fixed
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      QDRANT__STORAGE__STORAGE_PATH: "/qdrant/storage"
      QDRANT__SERVICE__GRPC_PORT: "6334" # Fixed value
      QDRANT__LOG_LEVEL: ${LOG_LEVEL}     # Use placeholder
    networks:
      - my_custom_network

  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    container_name: fastapi_cosmic_catalyst
    restart: always
    env_file: # Keep this if you want base values from .env
      - .env
    environment: # Use the LIST format for overrides/additions
      # Use placeholders for values you want explicitly set here (potentially overriding .env)
      - DATABASE_URL=${DATABASE_URL}
      - SANDBOX_SERVER_URL=${SANDBOX_SERVER_URL}
      - QDRANT_URL=${QDRANT_URL}
      - DEFAULT_SECRET_KEY=${DEFAULT_SECRET_KEY}
      # Add any other specific environment variables needed in this list format
    ports:
      - "9000:9000" # Assuming fixed port
    depends_on:
      db:
        condition: service_healthy
      sandbox:
        condition: service_started
      qdrant:
        condition: service_started
    # Use the exact list format for command
    command: ["./wait-for-it.sh", "db:3306", "--", "uvicorn", "entities_api.app:app", "--host", "0.0.0.0", "--port", "9000"]
    networks:
      - my_custom_network

  sandbox:
    build:
      context: .
      dockerfile: docker/sandbox/Dockerfile
    container_name: sandbox_api
    restart: always
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined
    devices:
      - /dev/fuse
    ports:
      - "8000:8000" # Assuming fixed port
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - /tmp/sandbox_logs:/app/logs
    env_file: # Keep this to load base values from .env
      - .env
    # Add specific 'environment:' list here if needed, like in 'api' service
    networks:
      - my_custom_network

  samba:
    image: dperson/samba
    container_name: samba_server
    restart: unless-stopped
    environment:
      USERID: ${SAMBA_USERID} # Placeholder
      GROUPID: ${SAMBA_GROUPID} # Placeholder
      TZ: ${SAMBA_TZ}       # Placeholder
      # Combine user/pass from .env values
      USER: "${SMBCLIENT_USERNAME};${SMBCLIENT_PASSWORD}" # Use placeholders
      # Construct share definition
      SHARE: "${SMBCLIENT_SHARE};/samba/share;yes;no;no;${SMBCLIENT_USERNAME}" # Use placeholders
      # Ensure GLOBAL uses \n for newlines within the string if needed by the image
      GLOBAL: "server min protocol = NT1\nserver max protocol = SMB3" # Keep literal \n
    ports:
      - "139:139"
      - "${SMBCLIENT_PORT}:445" # Use placeholder for host port (1445 in gold standard)
    volumes:
      # This MUST remain exactly as ${SHARED_PATH} for compose to interpolate it correctly at runtime
      - ${SHARED_PATH}:/samba/share
    networks:
      - my_custom_network

volumes:
  mysql_data:
    driver: local
  qdrant_storage:
    driver: local

networks:
  my_custom_network:
    driver: bridge